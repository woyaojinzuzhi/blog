<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>final_test</title>
    <url>/blog/2021/04/05/final-test/</url>
    <content><![CDATA[<h1 id="复习"><a href="#复习" class="headerlink" title="复习"></a>复习</h1><p>React-Native的期末考复习</p>
<h2 id="RN特点"><a href="#RN特点" class="headerlink" title="RN特点"></a>RN特点</h2><h2 id="混合框架"><a href="#混合框架" class="headerlink" title="混合框架"></a>混合框架</h2><p>Web APP 混合开发的框架</p>
<h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>简单流程、node、jdk、SDK（他们的作用）</p>
<h2 id="基础组件及使用方法"><a href="#基础组件及使用方法" class="headerlink" title="基础组件及使用方法"></a>基础组件及使用方法</h2><p>简单封装：View、Text、TextInput、Image、ScrollView、Platform、Dimensionsn 获取屏幕数据</p>
<h2 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h2><p>路由的配置</p>
<h2 id="第三方组件"><a href="#第三方组件" class="headerlink" title="第三方组件"></a>第三方组件</h2><p>知道几个的名称</p>
<h2 id="TS"><a href="#TS" class="headerlink" title="TS"></a>TS</h2><p>接口、装饰器、接口类型</p>
<h2 id="React语法"><a href="#React语法" class="headerlink" title="React语法"></a>React语法</h2><p>基本语法（jsx、属性、状态、组件类型、声明组件）</p>
<h2 id="hooks"><a href="#hooks" class="headerlink" title="hooks"></a>hooks</h2><p>useCallback\usememo</p>
<h2 id="状态"><a href="#状态" class="headerlink" title="状态"></a>状态</h2><p>redux</p>
<h2 id="不考"><a href="#不考" class="headerlink" title="不考"></a>不考</h2><p>mobx</p>
]]></content>
      <categories>
        <category>考试</category>
      </categories>
  </entry>
  <entry>
    <title>Mr.Li</title>
    <url>/blog/2021/04/03/helloword/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>测试</category>
      </categories>
  </entry>
  <entry>
    <title>第一次上传</title>
    <url>/blog/2021/04/03/postName/</url>
    <content><![CDATA[<h1 id="你好，欢迎来到我的世界！"><a href="#你好，欢迎来到我的世界！" class="headerlink" title="你好，欢迎来到我的世界！"></a>你好，欢迎来到我的世界！</h1>]]></content>
      <categories>
        <category>第一次上传</category>
      </categories>
  </entry>
  <entry>
    <title>HTML中的JavaScript</title>
    <url>/blog/2021/04/04/review1/</url>
    <content><![CDATA[<h1 id="复习"><a href="#复习" class="headerlink" title="复习"></a>复习</h1><blockquote>
<p>书：《Javascript高级程序设计》</p>
</blockquote>
<h2 id="lt-script-gt-元素"><a href="#lt-script-gt-元素" class="headerlink" title="&lt;script&gt;元素"></a>&lt;script&gt;元素</h2>]]></content>
      <categories>
        <category>复习JS</category>
      </categories>
      <tags>
        <tag>书：《Javascript高级程序设计》</tag>
      </tags>
  </entry>
  <entry>
    <title>什么是JavaScript</title>
    <url>/blog/2021/04/04/review/</url>
    <content><![CDATA[<h1 id="什么是JavaScript"><a href="#什么是JavaScript" class="headerlink" title="什么是JavaScript"></a>什么是JavaScript</h1><blockquote>
<p>书：《Javascript高级程序设计》</p>
</blockquote>
<p>JavaScript能够实现复杂的计算交互，包括闭包、匿名函数，甚至元编程等。<br><mark>桌面浏览器</mark>、<mark>手机浏览器</mark>和<mark>屏幕阅读器</mark>也支持JavaScript。<br>微软拥有自家客户端脚本语言—<u>VBScript</u>。</p>
<h2 id="lala">了解历史</h2>

<p>个人想要了解：<br>早期，网页越来越大，越来越复杂，使得验证简单的表单需要大量与服务器的往返通信，成为用户的痛点。<br>Mocha（LiveScript）—脚本语言诞生了。网景与Sun公司共同开发，后来发布后LiveScript改名为JavaScript。<br>创立之初，想在客户端和服务端都使用它，而在服务端，给他起了个名，叫LiveWire。<br>微软在当时发布了JScript，导致出现两个版本的JavaScript。<br>最终成立第39技术委员会（TC39），将JS语言标准化，使JS成为了<mark>通用、跨平台、厂商中立</mark>的脚本语言。<br>TC39委员会由网景、Sun、微软、Borland、Nombas和其他对这门脚本语言有兴趣的工程师组成。<br>最终打造出ECMA-262 — <mark><strong>ECMAScript</strong></mark>。<br>各家浏览器最终都以ECMAScript作为自己JavaScript实现的依据。<br><strong>个人见解</strong>：由此可见，ECMAScript是一个依据标准。其实就是一种<strong>规范</strong>。</p>
<h2 id="JavaScript实现"><a href="#JavaScript实现" class="headerlink" title="JavaScript实现"></a>JavaScript实现</h2><p>核心：ECMAScript<br>文档对象模型：DOM<br>浏览器对象模型：BOM</p>
<!-- 图片放置 -->
<p><img src="//upload-images.jianshu.io/upload_images/12444331-74b82b4900813e12.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="lalla"><br><img src="https://upload-images.jianshu.io/upload_images/12444331-74b82b4900813e12.jpg?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp"></p>
<img src="/blog/2021/04/04/review/js.png" class title="这是一张图片">

<p>其实ECMAScript并不局限于Web浏览器上。<br><mark><u>Web浏览器</u></mark>只是ECMAScript实现可能存在的一种<mark><strong>宿主环境</strong></mark><br>宿主环境提供ECMAScript的基准实现和与环境自身交互必需的扩展（例如DOM）。<br>扩展使用ECMAScript核心类型和语法，同时呢，提供特定于环境的额外功能。<br>大体就是扩展自带环境和额外功能，只是使用了ECMAScript的核心类型和语法。<br>同样作为<mark><strong>宿主环境</strong></mark>的还有服务器端JavaScript的<mark><u>Node.js</u></mark>和已经淘汰的<mark><u>Adobe Flash</u></mark>。<br>ECMA描述了JS语言的：<u>语法、类型、语句、关键字、保留字、操作符、全局对象</u>。<br>ECMAScript只是所有关乎这个规范的语言的一个<strong>统称</strong>，他们之间是<strong>包含关系</strong>。<br>如：JavaScript实现了ECMAScript，同样Adobe ActionScript也一样实现了ECMAScript。</p>
<!-- lala[lala](#lala) -->
<blockquote>
<ul>
<li>ES5于2019年12月3日正式发布。 该版本致力于厘清第三版存在的起义，同时添加了新功能（<u>包括原生的解析和序列化JSON数据的JSON对象</u>、<u>方便继承和高级属性定义的方法</u>、<u>增强ECMAScript引擎解释和解释和执行代码能力的严格模式</u>）；</li>
<li>ES6于2015年6月发布，又称ES2015。最重要的一批增强特性。 ES6正式支持了类、模块、迭代器、生成器、箭头函数、期约、反射、代理和众多新的数据类型。<a href="https://ld246.com/article/1583305480675#heading-ids">https://www.baidu.com</a></li>
</ul>
</blockquote>
<h2 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h2><p><strong>文档对象模型</strong>（DOM,Document Object Model）<br>是一个应用编程接口（API），用于在HTML中使用扩展的XML。<br>DOM将整个页面抽象为一组分层节点。HTML或XML页面的每个组成部分都是一种节点，包含不同的数据。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Sample Page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">st&#x3D;&gt;start: 开始</span><br><span class="line">e&#x3D;&gt;end: 结束:&gt;http:&#x2F;&#x2F;https:&#x2F;&#x2F;segmentfault.com&#x2F;blog&#x2F;ingood</span><br><span class="line">c1&#x3D;&gt;condition: A</span><br><span class="line">c2&#x3D;&gt;condition: B</span><br><span class="line">c3&#x3D;&gt;condition: C</span><br><span class="line">io&#x3D;&gt;inputoutput: D </span><br><span class="line">st-&gt;c1(no)-&gt;e</span><br><span class="line">c2(no)-&gt;e</span><br><span class="line">c3(no)-&gt;e</span><br><span class="line">c1(yes,right)-&gt;c2(yes,right)-&gt;c3(yes,right)-&gt;io</span><br><span class="line">io-&gt;e</span><br></pre></td></tr></table></figure>



<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;这里是js代码块&#x27;</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">del</span> </span>&#123;</span><br><span class="line">    destory();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight"><table><tr><td class="code"><pre><span class="line">printf(&#x27;%d&#x27;,6);</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>复习JS</category>
      </categories>
      <tags>
        <tag>书：《Javascript高级程序设计》</tag>
      </tags>
  </entry>
</search>
